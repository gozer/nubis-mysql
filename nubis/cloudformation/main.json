{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Skeleton deployment for the nubis project.",
  "Parameters": {
    "ServiceName": {
      "Description": "Name of the service",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "admin",
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify admin, prod, stage, or sandbox."
    },
    "SSHKeyName": {
      "Description": "Existing ssh key to deploy to EC2 instances",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "AmiId": {
      "Description": "The id of the ami for this region",
      "Type": "String"
    },
    "ConsulToken": {
      "Description": "Optionnal ACL Token for Consul",
      "Type": "String",
      "Default": "anonymous",
      "NoEcho": "true"
    },
    "StacksVersion": {
      "Description": "Version of the Nubis Stacks",
      "Type": "String",
      "Default": "v1.0.0"
    }
  },
  "Mappings": {
    "InstanceTypeMap": {
      "admin": {
        "InstanceType": "m3.medium"
      },
      "prod": {
        "InstanceType": "r3.4xlarge"
      },
      "stage": {
        "InstanceType": "m3.medium"
      },
      "sandbox": {
        "InstanceType": "m3.medium"
      }
    }
  },
  "Resources": {
    "BugzillaInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "StacksVersion": {
          "Ref": "StacksVersion"
        },
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              "bugzilla",
              {
                "Ref": "Environment"
              }
            ]
          ]
        }
      }
    },
    "VpcInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "StacksVersion": {
          "Ref": "StacksVersion"
        },
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupNestedStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              "vpc"
            ]
          ]
        },
        "SearchString": {
          "Ref": "Environment"
        }
      }
    },
    "MySqlSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MySql traffic rules",
        "VpcId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "VpcId"
          ]
        },
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "MySql Server Security Group"
          }
        ]
      }
    },
    "MySqlSelfIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "MySqlSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MySqlSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "MySqlEC2Ingress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "MySqlSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "SharedServicesSecurityGroupId"
          ]
        }
      }
    },
    "MySqlSshIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "MySqlSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "SshSecurityGroupId"
          ]
        }
      }
    },
    "EC2VolumeIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "MySQL-EC2-ENI",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AttachNetworkInterface",
                    "ec2:DescribeNetworkInterfaces"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "MySQL-EC2-VolumeAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AttachVolume",
                    "ec2:DetachVolume"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ec2:*:",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":volume/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ec2:*:",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":instance/*"
                        ]
                      ]
                    }
                  ],
                  "Condition": {
                    "StringEquals": {
                      "ec2:ResourceTag/ServiceName": {
                        "Ref": "ServiceName"
                      },
                      "ec2:ResourceTag/Environment": {
                        "Ref": "Environment"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "AZ1ENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "MySQL Server VIP",
        "GroupSet": [
          {
            "Ref": "MySqlSecurityGroup"
          }
        ],
        "SubnetId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateSubnetAZ1"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MySQL Server VIP"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "MySQL Server VIP"
          }
        ]
      }
    },
    "AZ1EBSVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateAvailabilityZone1"
          ]
        },
        "Encrypted": "false",
        "Size": "512",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MySQL Volume"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "MySQL Server"
          }
        ]
      }
    },
    "AZ2EBSVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateAvailabilityZone2"
          ]
        },
        "Encrypted": "false",
        "Size": "512",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MySQL Volume"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "MySQL Server"
          }
        ]
      }
    },
    "AZ3EBSVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateAvailabilityZone3"
          ]
        },
        "Encrypted": "false",
        "Size": "512",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MySQL Volume"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "MySQL Server"
          }
        ]
      }
    },
    "AZ1MySqlStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com/nubis-stacks",
              {
                "Ref": "StacksVersion"
              },
              "ec2.template"
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "StackName": {
            "Ref": "AWS::StackName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "TechnicalOwner": {
            "Ref": "TechnicalOwner"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "AmiId": {
            "Ref": "AmiId"
          },
          "ConsulToken": {
            "Ref": "ConsulToken"
          },
          "SSHKeyName": {
            "Ref": "SSHKeyName"
          },
          "InstanceType": {
            "Fn::FindInMap": [
              "InstanceTypeMap",
              {
                "Ref": "Environment"
              },
              "InstanceType"
            ]
          },
          "SecurityGroup": {
            "Ref": "MySqlSecurityGroup"
          },
          "IamRole": {
            "Ref": "EC2VolumeIamRole"
          },
          "VPCZoneIdentifier": {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ1"
            ]
          }
        }
      }
    },
    "AZ2MySqlStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com/nubis-stacks",
              {
                "Ref": "StacksVersion"
              },
              "ec2.template"
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "StackName": {
            "Ref": "AWS::StackName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "TechnicalOwner": {
            "Ref": "TechnicalOwner"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "AmiId": {
            "Ref": "AmiId"
          },
          "SSHKeyName": {
            "Ref": "SSHKeyName"
          },
          "InstanceType": {
            "Fn::FindInMap": [
              "InstanceTypeMap",
              {
                "Ref": "Environment"
              },
              "InstanceType"
            ]
          },
          "SecurityGroup": {
            "Ref": "MySqlSecurityGroup"
          },
          "IamRole": {
            "Ref": "EC2VolumeIamRole"
          },
          "VPCZoneIdentifier": {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ2"
            ]
          }
        }
      }
    },
    "AZ3MySqlStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com/nubis-stacks",
              {
                "Ref": "StacksVersion"
              },
              "ec2.template"
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "StackName": {
            "Ref": "AWS::StackName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "TechnicalOwner": {
            "Ref": "TechnicalOwner"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "AmiId": {
            "Ref": "AmiId"
          },
          "SSHKeyName": {
            "Ref": "SSHKeyName"
          },
          "InstanceType": {
            "Fn::FindInMap": [
              "InstanceTypeMap",
              {
                "Ref": "Environment"
              },
              "InstanceType"
            ]
          },
          "SecurityGroup": {
            "Ref": "MySqlSecurityGroup"
          },
          "IamRole": {
            "Ref": "EC2VolumeIamRole"
          },
          "VPCZoneIdentifier": {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ3"
            ]
          }
        }
      }
    }
  }
}
